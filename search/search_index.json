{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GO LEARN","text":""},{"location":"#assumptions","title":"Assumptions","text":"<p>Suppose we want to extract dependency information from a group of microservices.</p> <ul> <li>microservices are primarily written in Java (and built by Gradle)</li> <li>our exploration should be primarily in Go</li> </ul>"},{"location":"#topics","title":"Topics","text":"<ul> <li>write Github Actions config to deploy of a mkdocs.org site to Github Pages</li> <li>use protobuf to generate our domain (Gradle Tooling API artifact model)</li> </ul>"},{"location":"actions/","title":"Action","text":""},{"location":"actions/#github-actions","title":"Github Actions","text":"<p>Understanding Github Actions</p> <p>GH Pages - websites for your repos</p>"},{"location":"actions/#sandbox-actions","title":"Sandbox Actions","text":"<p>Check the execution at Sandbox actions console</p>"},{"location":"actions/#publish-mkdocs-to-gh-pages","title":"publish mkdocs to GH Pages","text":"<p>mkdocs-deploy</p> <p>This action publishes to the sandbox root (which might not be advisable)</p> <p>TODO : disable this, and put in place an action to upload to s3, make a link to Marco's landing page</p> <pre><code>name: Publish mkdocs via GitHub Pages\non:\n  push:\n    paths:\n      golearn/site/**\n\njobs:\n  build:\n    name: Deploy docs\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          fetch-depth: 0\n      - uses: actions/setup-python@v2\n      - run: pip install --upgrade pip &amp;&amp; pip install mkdocs mkdocs-gen-files mkdocs-material\n      - run: git config user.name 'github-actions[bot]' &amp;&amp; git config user.email 'github-actions[bot]@users.noreply.github.com'\n      - name: Publish docs\n        working-directory: ./golearn/site\n        run: mkdocs gh-deploy\n</code></pre> <p>check source</p>"},{"location":"mkdocs/","title":"Mkdocs","text":"<p>www.mkdocs.org</p> <p>MkDocs is a fast, simple and downright gorgeous static site generator</p> <p>This is a Python tool that\u00b4s simple enough to be deployed through a Github Action.</p> <ul> <li>writing docs</li> </ul>"},{"location":"protobuf/","title":"Protbufs","text":"<ul> <li>protobuf</li> <li>Gradle Tooling API</li> </ul> <p>Let\u00b4s write a simple protobuf to represent a Gradle Module</p> <pre><code>message GradleModuleVersion{\n  string group = 1;\n  string name = 2;\n  string version = 3;\n}\n</code></pre> <p>Generated Go struct with:</p> <pre><code>protoc --proto_path=./protos --go_out=./marshalling ./protos/GradleAnalysis.proto\n</code></pre> <p>Usage example:</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    pb \"golearn/api/v1\"\n)\n\nfunc main() {\n    commonsLang3 := pb.GradleModuleVersion{\n        Group:   \"org.apache.commons\",\n        Name:    \"commons-lang3\",\n        Version: \"3.14.0\",\n    }\n\n    fmt.Println(\"artifact rep:\", commonsLang3)\n}\n</code></pre>"},{"location":"sorting/","title":"Sorting in Go","text":"<p>how-to-sort-in-go/</p> <p>protocmp#SortRepeated</p> <p>https://pkg.go.dev/sort</p>"},{"location":"testing/","title":"Testing in Go","text":"<p>Testing in Go</p> <p>Add a test</p> <p>Assertions</p>"}]}